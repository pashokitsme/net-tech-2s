- name: Install python
  hosts: all
  become: true
  gather_facts: false
  vars:
    python_version: 3
    executable: /bin/bash

  pre_tasks:
    - name: Check if python is installed
      ansible.builtin.raw: python{{ python_version }} --version
      args:
        executable: '{{ executable }}'
      register: python_installed
      failed_when: false
      changed_when: false

    - name: Update package repository
      ansible.builtin.raw: apt-get update
      args:
        executable: '{{ executable }}'
      when: 'python_installed.rc'
      changed_when: 'python_installed.rc'

    - name: Install python{{ python_version }}
      ansible.builtin.raw: apt-get install -y python{{ python_version }}
      args:
        executable: '{{ executable }}'
      when: 'python_installed.rc'
      changed_when: 'python_installed.rc'

  tasks:
    - name: Gather installed python version
      ansible.builtin.raw: python{{ python_version }} --version
      args:
        executable: '{{ executable }}'
      register: result
      changed_when: false

    - name: Display python version
      ansible.builtin.debug:
        msg: '{{ result.stdout.strip() }}'

- name: Install packages
  hosts: all
  become: true
  gather_facts: false

  tasks:
    - name: Install helper packages
      ansible.builtin.package:
        name:
          - curl
          - apt-https
          - bind-utils
        state: present_not_latest

- name: Setup web-server
  hosts: servers
  become: true
  gather_facts: false

  tasks:
    - name: Check if Angie is installed
      ansible.builtin.command:
        cmd: angie -v
      register: angie_installed
      failed_when: false
      changed_when: false

    - name: Download Angie keys & add repository
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          mkdir -p /etc/ssl/angie
          curl -o /etc/ssl/angie/angie-signing.gpg https://angie.software/keys/angie-signing.gpg
          gpg --no-default-keyring --keyring /usr/lib/alt-gpgkeys/pubring.gpg --import /etc/ssl/angie/angie-signing.gpg

          echo 'simple-key "angie" {
            Fingerprint "EB8EAF3D4EF1B1ECF34865A2617AB978CB849A76";
            Name "Angie (Signing Key) <devops@tech.wbsrv.ru>";
          }' | tee /etc/apt/vendors.list.d/angie.list > /dev/null

          echo "rpm [angie] https://download.angie.software/angie/altlinux/10/ $(uname -m) main" \
          | tee /etc/apt/sources.list.d/angie.list > /dev/null
      when: angie_installed.rc
      changed_when: angie_installed.rc

    - name: Install packages
      ansible.builtin.package:
        name:
          - angie
        update_cache: true
        state: present_not_latest
      when: angie_installed.rc

    - name: Test Angie conf
      ansible.builtin.command:
        cmd: angie -t
      register: angie_conf
      changed_when: false

    - name: Stop Angie
      ansible.builtin.shell:
        cmd: |
          if [ -f /run/angie.pid ]; then
            angie -s stop
            exit 0
          fi
          exit 1
      register: angie_stop
      when: angie_conf.rc == 0
      changed_when: angie_stop.rc == 0
      failed_when: angie_stop.rc > 1

    - name: Start Angie
      ansible.builtin.command:
        cmd: angie
      when: angie_conf.rc == 0
      changed_when: angie_conf.rc == 0

    - name: Test Angie
      ansible.builtin.uri:
        url: http://localhost:80
        method: GET
      changed_when: false

- name: Install DHCP server
  hosts: servers
  gather_facts: false

  tasks:
    - name: Install DHCP server
      ansible.builtin.package:
        name:
          - dhcp-server
          - dhcp-client
        state: present_not_latest

    - name: Stop DHCP server
      ansible.builtin.command:
        cmd: pkill -F /run/dhcpd.pid
      register: dhcpd_stop
      failed_when: dhcpd_stop.rc > 1
      changed_when: dhcpd_stop.rc == 0

    - name: Configure DHCP server
      ansible.builtin.template:
        src: dhcpd.conf
        dest: /etc/dhcp/dhcpd.conf
        owner: root
        group: root
        mode: '0640'

    - name: Test DHCP server conf
      ansible.builtin.command:
        cmd: dhcpd -t
      become: true
      register: dhcpd_conf
      changed_when: false

    - name: Start DHCP server
      ansible.builtin.command:
        cmd: dhcpd
      when: dhcpd_conf.rc == 0
      changed_when: dhcpd_conf.rc == 0

    - name: Assign static IP to server
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          INTERFACE=$(ip -o addr show | awk '/10.10.0.*brd 10.10.0.255/{print $2}')
          ip addr flush dev $INTERFACE
          ip addr add 10.10.0.2/24 dev $INTERFACE
          ip link set $INTERFACE up
      async: 1
      poll: 0
      changed_when: true

- name: Install DHCP client
  hosts: clients
  gather_facts: false
  tasks:
    - name: Install DHCP client
      ansible.builtin.package:
        name:
          - dhcp-client
        state: present_not_latest

    - name: Retrieve interface name
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          ip -o addr show | awk '/10.10.0.*brd 10.10.0.255/{print $2}'
      register: selected_interface_result
      changed_when: false
      failed_when: selected_interface_result.stdout.strip() == ''

    - name: Set interface fact
      ansible.builtin.set_fact:
        selected_interface: '{{ selected_interface_result.stdout.strip() }}'

    - name: Display interface
      ansible.builtin.debug:
        msg: 'Selected interface: {{ selected_interface }}'

    - name: 'Release addresses: {{ selected_interface }}'
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          dhclient -r {{ selected_interface }}
          ip addr flush dev {{ selected_interface }}
      changed_when: true

    - name: Run DHCP client
      ansible.builtin.command:
        cmd: dhclient {{ selected_interface }}
      changed_when: true

    - name: Gather claimed IP addresses
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          ip -br -f inet addr show {{ selected_interface }} | awk '{print $3}'
      register: claimed_addresses
      changed_when: false

    - name: Display claimed addresses
      ansible.builtin.debug:
        msg: 'Claimed addresses: {{ claimed_addresses.stdout.strip() }}'

- name: Install DNS server
  hosts: servers
  gather_facts: false

  tasks:
    - name: Install DNS server
      ansible.builtin.package:
        name:
          - bind
        state: present_not_latest

    - name: Create bind user
      ansible.builtin.user:
        name: bind
        state: present

    - name: Create bind directories
      ansible.builtin.file:
        path: '{{ item }}'
        state: directory
        owner: root
        group: bind
        mode: '0750'
      loop:
        - /etc/bind
        - /etc/bind/zones

    - name: Configure DNS server
      ansible.builtin.template:
        src: '{{ item.from }}'
        dest: '{{ item.to }}'
        owner: root
        group: bind
        mode: '0750'
      loop:
        - from: named.conf
          to: /etc/bind/named.conf
        - from: db.internal
          to: /etc/bind/zones/db.internal
        - from: db.10.10.rev
          to: /etc/bind/zones/db.10.10.rev

    - name: Test DNS server conf
      ansible.builtin.command:
        cmd: named-checkconf /etc/bind/named.conf
      register: named_conf
      changed_when: false

    - name: Kill DNS server
      ansible.builtin.command:
        cmd: killall -9 named
      register: named_kill
      failed_when: named_kill.rc > 1
      changed_when: named_kill.rc == 0

    - name: Start DNS server
      ansible.builtin.command:
        cmd: named
      register: named_start
      when: named_conf.rc == 0
      changed_when: named_conf.rc == 0
      failed_when: named_start.rc != 0

- name: Configure DNS client
  hosts: clients
  gather_facts: false

  tasks:
    - name: Copy resolv.conf
      ansible.builtin.template:
        src: resolv.conf
        dest: /tmp/resolv.conf
        owner: root
        group: root
        mode: '0640'

    - name: Configure resolv.conf
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          cat /tmp/resolv.conf > /etc/resolv.conf
          rm /tmp/resolv.conf
      changed_when: true

- name: Test DNS server
  hosts: clients
  gather_facts: false

  tasks:
    - name: Test DNS server
      ansible.builtin.command:
        cmd: nslookup {{ item.host }} {{ item.dns }}
      loop:
        - host: ya.ru
          dns: 8.8.8.8
        - host: server.internal
          dns: 10.10.0.2
        - host: server.internal
          dns: ''
      changed_when: false
      register: nslookup_result

    - name: Display nslookup result
      ansible.builtin.debug:
        msg: "{{ nslookup_result.results | map(attribute='stdout') | list }}"

- name: Configure iptables
  hosts: all
  become: true
  gather_facts: false

  tasks:
    - name: Install iptables
      ansible.builtin.package:
        name:
          - iptables
        state: present_not_latest

    - name: Configure iptables
      ansible.builtin.template:
        src: iptables
        dest: /etc/sysconfig/iptables
        owner: root
        group: root
        mode: '0640'

    - name: Apply iptables
      ansible.builtin.command:
        cmd: iptables-restore /etc/sysconfig/iptables
      changed_when: true

- name: Test DNS server
  hosts: clients
  gather_facts: false

  tasks:
    - name: Test DNS server
      ansible.builtin.uri:
        url: http://server.internal
        method: GET
        return_content: false
      register: curl_result
      when: true
      changed_when: false
